<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Ancestors</key>
	<array>
		<string>com.apple.dt.unit.coreDataCocoaTouchApplication</string>
		<string>com.couchbase.base</string>		
	</array>
	<key>Concrete</key>
	<true/>
	<key>Definitions</key>
	<dict>
		<key>FlipsideView.xib</key>
		<dict>
			<key>Path</key>
			<string>FlipsideView.xib</string>
		</dict>
		<key>FlipsideViewController.h</key>
		<dict>
			<key>Path</key>
			<string>FlipsideViewController.h</string>
			<key>TargetIndices</key>
			<array/>
		</dict>
		<key>FlipsideViewController.m</key>
		<dict>
			<key>Path</key>
			<string>FlipsideViewController.m</string>
		</dict>
		<key>MainView.xib</key>
		<dict>
			<key>Path</key>
			<string>MainView.xib</string>
		</dict>
		<key>MainViewController.h</key>
		<dict>
			<key>TargetIndices</key>
			<array/>
		</dict>
		<key>MainViewController.h:ivars</key>
		<dict>
			<key>Beginning</key>
			<string>@interface MainViewController : UIViewController &lt;FlipsideViewControllerDelegate&gt; {
</string>
			<key>End</key>
			<string>}

</string>
			<key>Indent</key>
			<integer>1</integer>
		</dict>
		<key>MainViewController.h:methods:showInfo</key>
		<string>- (IBAction)showInfo:(id)sender;
</string>
		<key>MainViewController.m</key>
		<dict>
			<key>End</key>
			<string>@end</string>
		</dict>
		<key>MainViewController.m:implementation</key>
		<string>@implementation MainViewController
</string>
		<key>MainViewController.m:showInfo</key>
		<string>/*
// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad
{
    [super viewDidLoad];
}
*/

- (void)flipsideViewControllerDidFinish:(FlipsideViewController *)controller
{
    [self dismissModalViewControllerAnimated:YES];
}

- (IBAction)showInfo:(id)sender
{    
    FlipsideViewController *controller = [[FlipsideViewController alloc] initWithNibName:@"FlipsideView" bundle:nil];
    controller.delegate = self;
    
    controller.modalTransitionStyle = UIModalTransitionStyleFlipHorizontal;
    [self presentModalViewController:controller animated:YES];
    
    [controller release];
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations.
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc. that aren't in use.
}

- (void)viewDidUnload
{
    [super viewDidUnload];

    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}
</string>
		<key>___PACKAGENAMEASIDENTIFIER___AppDelegate.h:couchmethods:mainViewController</key>
		<string>@property (nonatomic, retain) IBOutlet MainViewController *mainViewController;
</string>
		<key>___PACKAGENAMEASIDENTIFIER___AppDelegate.m:applicationdidFinishLaunchingWithOptions:setup</key>
		<string>// Add the main view controller's view to the window and display.
self.window.rootViewController = self.mainViewController;
[self.window makeKeyAndVisible];
</string>
		<key>en.lproj/MainWindow.xib</key>
		<dict>
			<key>Path</key>
			<string>MainWindow.xib</string>
		</dict>
	</dict>
	<key>Description</key>
	<string>This template provides a starting point for a utility Couchbase application that has a main view, a flipside view and a Couchbase instance. It sets up an Info button to flip the main view to the flipside, and a navigation bar with a Done item to flip back to the main view.</string>
	<key>Identifier</key>
	<string>com.couchbase.dt.unit.utilityApplication</string>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Nodes</key>
	<array>
		<string>en.lproj/MainWindow.xib</string>
		<string>___PACKAGENAMEASIDENTIFIER___AppDelegate.h:class:MainViewController</string>
		<string>___PACKAGENAMEASIDENTIFIER___AppDelegate.h:couchmethods:mainViewController</string>
		<string>___PACKAGENAMEASIDENTIFIER___AppDelegate.m:import:MainViewController.h</string>
		<string>___PACKAGENAMEASIDENTIFIER___AppDelegate.m:synthesize:mainViewController=_mainViewController</string>
		<string>___PACKAGENAMEASIDENTIFIER___AppDelegate.m:dealloc:_mainViewController</string>
		<string>MainViewController.h:comments</string>
		<string>MainViewController.h:import:FlipsideViewController.h</string>
		<string>MainViewController.h:class</string>
		<string>MainViewController.h:ivars</string>
		<string>MainViewController.h:methods:showInfo</string>
		<string>MainViewController.m:comments</string>
		<string>MainViewController.m:import:MainViewController.h</string>
		<string>MainViewController.m:implementation</string>
		<string>MainViewController.m:synthesize</string>
		<string>MainViewController.m:showInfo</string>
		<string>MainViewController.m:dealloc</string>
		<string>MainView.xib</string>
		<string>FlipsideViewController.h</string>
		<string>FlipsideViewController.m</string>
		<string>FlipsideView.xib</string>
		<string>___PACKAGENAME___-Info.plist:UISupportedInterfaceOrientations~iPhone</string>
	</array>
	<key>Options</key>
	<array>
		<dict>
			<key>Identifier</key>
			<string>coreData</string>
			<key>Units</key>
			<dict>
				<key>true</key>
				<dict>
					<key>Definitions</key>
					<dict>
						<key>MainViewController.h:ivars</key>
						<dict>
							<key>Beginning</key>
							<string>#import &lt;CoreData/CoreData.h&gt;

@interface MainViewController : UIViewController &lt;FlipsideViewControllerDelegate&gt; {
</string>
							<key>End</key>
							<string>}

</string>
							<key>Indent</key>
							<integer>1</integer>
						</dict>
						<key>MainViewController.h:methods:managedObjectContext</key>
						<string>@property (nonatomic, retain) NSManagedObjectContext *managedObjectContext;
</string>
						<key>___PACKAGENAMEASIDENTIFIER___AppDelegate.m:applicationdidFinishLaunchingWithOptions:rootViewController</key>
						<string>mainViewController.managedObjectContext = self.managedObjectContext;
</string>
					</dict>
					<key>Nodes</key>
					<array>
						<string>___PACKAGENAMEASIDENTIFIER___AppDelegate.m:applicationdidFinishLaunchingWithOptions:mainViewController</string>
						<string>MainViewController.h:methods:managedObjectContext</string>
						<string>MainViewController.m:synthesize:managedObjectContext=_managedObjectContext</string>
						<string>MainViewController.m:dealloc:_managedObjectContext</string>
					</array>
				</dict>
			</dict>
		</dict>
	</array>
</dict>
</plist>
